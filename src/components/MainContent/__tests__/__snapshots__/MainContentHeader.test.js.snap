// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main Content Header renders the component and matches it to snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    category=""
    difficulty=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <h1
          id="category"
        >
          
        </h1>,
        <h2
          id="difficulty"
        >
          Difficulty: 
          
        </h2>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "h1",
        "nodeType": "host",
        "props": Object {
          "children": "",
          "id": "category",
        },
        "ref": null,
        "rendered": "",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": "h2",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Difficulty: ",
            "",
          ],
          "id": "difficulty",
        },
        "ref": null,
        "rendered": Array [
          "Difficulty: ",
          "",
        ],
        "type": "h2",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <h1
            id="category"
          >
            
          </h1>,
          <h2
            id="difficulty"
          >
            Difficulty: 
            
          </h2>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "h1",
          "nodeType": "host",
          "props": Object {
            "children": "",
            "id": "category",
          },
          "ref": null,
          "rendered": "",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": "h2",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Difficulty: ",
              "",
            ],
            "id": "difficulty",
          },
          "ref": null,
          "rendered": Array [
            "Difficulty: ",
            "",
          ],
          "type": "h2",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
